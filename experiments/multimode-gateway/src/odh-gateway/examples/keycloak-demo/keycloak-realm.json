{
  "id": "odh",
  "realm": "odh",
  "displayName": "ODH (Open Data Hub)",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>ODH Gateway Demo</span></div>",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultRole": {
    "id": "default-role-odh",
    "name": "default-roles-odh",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "odh"
  },
  "requiredCredentials": [ "password" ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [ "ES256", "RS256" ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "groups": [
    {
      "id": "data-scientists-group-id",
      "name": "data-scientists",
      "path": "/data-scientists",
      "attributes": {
        "description": ["Data Scientists group with access to ML tools"]
      },
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "admins-group-id", 
      "name": "admins",
      "path": "/admins",
      "attributes": {
        "description": ["Administrators group with full access"]
      },
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "users": [
    {
      "id": "test-user-id",
      "username": "testuser",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Test",
      "lastName": "User",
      "email": "testuser@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [ "default-roles-odh" ],
      "notBefore": 0,
      "groups": [ "/data-scientists" ]
    }
  ],
  "clients": [
    {
      "id": "odh-gateway-client-id",
      "clientId": "odh-gateway",
      "name": "ODH Gateway",
      "description": "OpenID Connect client for ODH Gateway reverse proxy",
      "rootUrl": "http://localhost:8080",
      "adminUrl": "",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "odh-gateway-secret-123",
      "redirectUris": [
        "http://localhost:8080/*",
        "http://127.0.0.1:8080/*",
        "http://odh-gateway:8080/*"
      ],
      "webOrigins": [
        "http://localhost:8080",
        "http://127.0.0.1:8080",
        "http://odh-gateway:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1640995200",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "username-mapper",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
                 {
           "id": "email-mapper",
           "name": "email",
           "protocol": "openid-connect",
           "protocolMapper": "oidc-usermodel-property-mapper",
           "consentRequired": false,
           "config": {
             "userinfo.token.claim": "true",
             "user.attribute": "email",
             "id.token.claim": "true",
             "access.token.claim": "true",
             "claim.name": "email",
             "jsonType.label": "String"
           }
         },
         {
           "id": "groups-mapper",
           "name": "groups",
           "protocol": "openid-connect",
           "protocolMapper": "oidc-group-membership-mapper",
           "consentRequired": false,
           "config": {
             "full.path": "false",
             "id.token.claim": "true",
             "access.token.claim": "true",
             "claim.name": "groups",
             "userinfo.token.claim": "true"
           }
         }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "email",
        "openid"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "openid-scope",
      "name": "openid",
      "description": "OpenID Connect built-in scope: openid",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "profile-scope", 
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "email-scope",
      "name": "email", 
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "cibaAuthRequestedUserHint": "login_hint"
  },
  "keycloakVersion": "22.0.5"
} 