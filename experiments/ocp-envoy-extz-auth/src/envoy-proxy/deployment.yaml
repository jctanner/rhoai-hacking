apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: echo-server
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: echo_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: echo_service
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: echo_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: echo-server.echo-server.svc.cluster.local
                    port_value: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy
  namespace: echo-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy-proxy
  template:
    metadata:
      labels:
        app: envoy-proxy
    spec:
      containers:
      - name: envoy
        image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel9:2.6
        command: ["/usr/local/bin/envoy"]
        args: ["-c", "/etc/envoy/envoy.yaml"]
        ports:
        - containerPort: 10000
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-proxy
  namespace: echo-server
spec:
  selector:
    app: envoy-proxy
  ports:
    - name: 10000-tcp
      protocol: TCP
      port: 80
      targetPort: 10000
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: echo-proxy
  namespace: echo-server
spec:
  host: echo-proxy.apps-crc.testing
  to:
    kind: Service
    name: envoy-proxy
  port:
    targetPort: 10000-tcp
